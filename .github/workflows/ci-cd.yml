name: CI/CD Pipeline with Rollback and Security Scanning

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    # Checkout the Code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set Up Python Environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Cache Python Dependencies
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Install Dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Run Linter
    - name: Run Linter
      run: |
        pip install flake8
        flake8 .

    # Run Unit Tests
    - name: Run tests
      run: pytest

    # Install Snyk CLI
    - name: Install Snyk CLI
      run: |
        curl -fsSL https://static.snyk.io/cli/latest/snyk-linux -o /usr/local/bin/snyk
        chmod +x /usr/local/bin/snyk

    # Authenticate with Snyk
    - name: Authenticate Snyk
      run: snyk auth ${{ secrets.SNYK_TOKEN }}

    # Snyk Dependency Scan
    - name: Snyk Dependency Scan
      run: snyk test --file=requirements.txt --package-manager=pip

    # Build Docker Image
    - name: Build Docker image
      run: |
        docker build -t dgurutester/flask-app:${{ github.sha }} .

    # Docker Scan
    - name: Docker Scan
      run: docker scan dgurutester/flask-app:${{ github.sha }}

    # Push Docker Image to Docker Hub
    - name: Push Docker image to Docker Hub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
        docker push dgurutester/flask-app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    # Deploy Secrets
    - name: Deploy Secrets
      run: kubectl apply -f db-secrets.yaml

    # Validate Kubernetes Context
    - name: Validate Kubernetes Context
      run: kubectl config current-context

    # Deploy to Kubernetes
    - name: Deploy to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        kubectl apply -f flask-app-deployment.yaml
        kubectl apply -f flask-app-service.yaml
        kubectl apply -f flask-app-ingress.yaml

    # Verify Deployment
    - name: Verify Kubernetes Deployment
      run: kubectl rollout status deployment/flask-app

    # Validate Application Deployment
    - name: Validate Application Deployment
      run: curl -f http://<your-ingress-domain> || exit 1

    # Rollback on Failure
    - name: Rollback on Failure
      if: failure()
      run: kubectl rollout undo deployment/flask-app

    # Notify on Slack
    - name: Notify on Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,commit,author
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}